const express = require("express");
const { config } = require("dotenv");
const TelegramApi = require("node-telegram-bot-api");
const { accessButton, continuousButtons, payDoneButton } = require("./options");
const sleep = require("./utils");
const axios = require("axios");

const app = express();
const port = process.env.PORT || 3001;
const TELEGRAM_URI = `https://api.telegram.org/bot${process.env.TELEGRAM_API_TOKEN}/sendMessage`;

app.use(express.json());

app.use(
  express.urlencoded({
    extended: true,
  })
);

app.get("/", (req, res) => res.type("html").send(html));

app.post("/start", async (req, res) => {
  const { message } = req.body;
  const responseText = "test response";
  const messageText = message?.text?.toLowerCase()?.trim();
  const chatId = message?.chat?.id;
  if (!messageText || !chatId) {
    return res.sendStatus(400);
  }
  try {
    await axios.post(TELEGRAM_URI, {
      chat_id: chatId,
      text: responseText,
    });
    res.send("Done");
  } catch (e) {
    console.log(e);
    res.send(e);
  }
});

app.listen(port, () => console.log(`Example app listening on port ${port}!`));

config();
const TELEGRAM_API_TOKEN = process.env.TELEGRAM_API_TOKEN;
const RARRIKATE_CHAT_ID = process.env.RARRIKATE_CHAT_ID;
const token = TELEGRAM_API_TOKEN;

const rarrikateChatId = RARRIKATE_CHAT_ID;

const bot = new TelegramApi(token, { polling: true });

const start = () => {
  const RARRIKATE_CHAT_ID = process.env.RARRIKATE_CHAT_ID;
  const token = TELEGRAM_API_TOKEN;
  const initMsg = "/start";

  bot.setMyCommands([
    {
      command: initMsg,
      description: "–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
    },
  ]);

  bot.on("message", async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;

    if (text === initMsg) {
      await bot.sendMessage(
        chatId,
        ` –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ö–∞—Ç–∏
  –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ "–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —ç—Å—Ç–µ—Ç–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞"`,
        accessButton
      );
    }
  });

  bot.on("callback_query", async cbMsg => {
    const answer = cbMsg.data;
    const cbChatId = cbMsg.from.id;
    if (answer === "access") {
      await bot.sendMessage(
        cbChatId,
        `"–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —ç—Å—Ç–µ—Ç–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤" - —ç—Ç–æ –±–∞–∑–∞ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –≤–æ—Ä–±—É–∫–æ–≤, –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π, –∞ —Ç–∞–∫–∂–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –ö–∞—Ç–µ–π.
      –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ üñ§  
      
      –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 30 –¥–Ω–µ–π - 990‚ÇΩ(–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –∑–∞ –ø–∞—Ä—É –¥–Ω–µ–π –¥–æ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è).  
      
      –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 3 –∏ 6 –º–µ—Å—è—Ü–µ–≤. –ü—Ä–∏ —ç—Ç–æ–º, –∑–∞ —Ç–æ–±–æ–π —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –º–µ—Å—è—Ü üñ§
      –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ - 2970‚ÇΩ
      –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ - 5940‚ÇΩ
      
      –ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç—ã –ø–æ–ø–∞–¥–µ—à—å –≤ –∫–∞–Ω–∞–ª "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ ü•®" –∏ —É–∂–µ —Å–º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç –Ω–∏—Ö —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ ‚ú®`,
        continuousButtons
      );
    }

    if (answer === "writeKate") {
      console.log(answer);
    }

    if (answer === "pay") {
      await bot.sendMessage(
        cbChatId,
        `–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, –ø–µ—Ä–µ–≤–µ–¥–∏ –Ω—É–∂–Ω—É—é —Å—É–º–º—É:
990‚ÇΩ / 2970‚ÇΩ / 5940‚ÇΩ
‚ÅÉ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã:
5536 9140 1779 5208
     
‚ÅÉ –∏–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ:
https://www.tinkoff.ru/rm/elaeva.ekaterina5/mGeOh69614
     
–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–Ø –æ–ø–ª–∞—Ç–∏–ª(-–∞)`,
        payDoneButton
      );
    }

    if (answer === "payDone") {
      await bot.sendMessage(
        cbChatId,
        `–°–µ–∫—É–Ω–¥—É, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à—É –æ–ø–ª–∞—Ç—É. 
      –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...`
      );
      // await bot.sendMessage(
      //   rarrikateChatId,
      //   `${cbMsg.from.username} ${cbMsg.from.last_name} ${cbMsg.from.first_name}`
      // );
      await sleep(1000 * 60 * 5);
      await bot.sendMessage(
        cbChatId,
        `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è! –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üéâ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∫–∞–Ω–∞–ª, –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ:

        –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
        
        *–ó–∞ –ø–∞—Ä—É –¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.
        –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —Ç—ã —Å–º–æ–∂–µ—à—å –≤ —ç—Ç–æ–º –∂–µ –±–æ—Ç–µ
        –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏—Ç –≤–æ–≤—Ä–µ–º—è, —Ç—ã –±—É–¥–µ—à—å —É–¥–∞–ª–µ–Ω(-–∞) –∏–∑ –∫–∞–Ω–∞–ª–∞, –Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Å–º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è! üñ§`
      );
    }
  });
};
start();

const html = `
<!DOCTYPE html>
<html>
  <head>
    <title>Hello from Render!</title>
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
    <script>
      setTimeout(() => {
        confetti({
          particleCount: 100,
          spread: 70,
          origin: { y: 0.6 },
          disableForReducedMotion: true
        });
      }, 500);
    </script>
    <style>
      @import url("https://p.typekit.net/p.css?s=1&k=vnd5zic&ht=tk&f=39475.39476.39477.39478.39479.39480.39481.39482&a=18673890&app=typekit&e=css");
      @font-face {
        font-family: "neo-sans";
        src: url("https://use.typekit.net/af/00ac0a/00000000000000003b9b2033/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff2"), url("https://use.typekit.net/af/00ac0a/00000000000000003b9b2033/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("woff"), url("https://use.typekit.net/af/00ac0a/00000000000000003b9b2033/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3") format("opentype");
        font-style: normal;
        font-weight: 700;
      }
      html {
        font-family: neo-sans;
        font-weight: 700;
        font-size: calc(62rem / 16);
      }
      body {
        background: white;
      }
      section {
        border-radius: 1em;
        padding: 1em;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-right: -50%;
        transform: translate(-50%, -50%);
      }
    </style>
  </head>
  <body>
    <section>
      Hello from Render!
    </section>
  </body>
</html>
`;
